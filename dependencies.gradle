def postgresVersion          = '42.7.4'
def ninjaSquadVersion        = '4.0.2'
def jacksonVersion           = '2.17.3'
def valiktorVersion          = '0.12.0'
def openApiVersion           = "2.6.0"
def testContainerVersion     = '1.20.3'
def jsonAssertVersion        = '1.5.3'
def kluentVersion            = '1.72'


dependencies {

    //Spring boot
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"

    //JWT
    implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"

    //Spring boot test
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: "org.mockito", module: "mockito-core"
    }

    //Postgres
    runtimeOnly "org.postgresql:postgresql:${postgresVersion}"
    implementation "org.flywaydb:flyway-core:${flyWayVersion}"
    implementation "org.flywaydb:flyway-database-postgresql:${flyWayVersion}"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-cli:$detektVersion"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-rules-libraries:$detektVersion"

    //Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"

    //Valiktor
    implementation "org.valiktor:valiktor-core:${valiktorVersion}"

    //OpenApi
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"
    implementation "org.springdoc:springdoc-openapi-starter-common:$openApiVersion"

    //Mockk
    testImplementation "com.ninja-squad:springmockk:${ninjaSquadVersion}"

    //Commons
    implementation "com.google.code.gson:gson:${gsonVersion}"

    //Testcontainer
    testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainerVersion}"

    //JsonAssert
    testImplementation "org.skyscreamer:jsonassert:${jsonAssertVersion}"

    //Kluent
    testImplementation "org.amshove.kluent:kluent:${kluentVersion}"
}