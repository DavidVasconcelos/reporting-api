def ninjaSquadVersion        = '2.0.3'
def jacksonVersion           = '2.11.3'
def valiktorVersion          = '0.12.0'
def springFoxVersion         = '3.0.0'
def swaggerModelsVersion     = '1.5.21'
def postgresVersion          = '42.2.10'
def testContainerVersion     = '1.15.1'

dependencies {

    //Spring boot
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"

    //JWT
    implementation "io.jsonwebtoken:jjwt:${jwtVersion}"

    //Spring boot test
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: "org.mockito", module: "mockito-core"
    }

    //Postgres
    implementation "org.postgresql:postgresql:${postgresVersion}"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"

    //Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"

    //Valiktor
    implementation "org.valiktor:valiktor-core:${valiktorVersion}"

    //Swagger2
    implementation ("io.springfox:springfox-swagger2:${springFoxVersion}") {
        exclude group: "io.swagger", module: "swagger-annotations"
        exclude group: "io.swagger", module: "swagger-models"
    }
    implementation "io.springfox:springfox-swagger-ui:${springFoxVersion}"
    implementation "io.swagger:swagger-models:${swaggerModelsVersion}"

    //Mockk
    testImplementation "com.ninja-squad:springmockk:${ninjaSquadVersion}"

    //commons
    implementation "com.google.code.gson:gson:${gsonVersion}"

    //Testcontainer
    testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainerVersion}"
}